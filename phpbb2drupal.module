<?php
/****************************************************
 *
 *
****************************************************/

/****************************************************
 *
 * Implementation of hook_menu()
 *
****************************************************/
function phpbb2drupal_menu($may_cache) {
  global $user;
  $items = array();

  if (!$may_cache) {
    $items[] = array(
      'path' => 'admin/phpbb2drupal',
      'title' => 'phpBB to Drupal',
      'access' => user_access('migrate phpBB'),
      'callback' => '_phpbb2drupal', 
      'type'=> MENU_NORMAL_ITEM
    );
    $items[] = array(
      'path' => 'admin/phpbb2drupal/configure',
      'title' => 'Migration configuration',
      'access' => user_access('migrate phpBB'),
      'callback' => '_phpbb2drupal_configure', 
      'type'=> MENU_CALLBACK
    );
    $items[] = array(
      'path' => 'admin/phpbb2drupal/migrate',
      'title' => 'Execute Migration',
      'access' => user_access('migrate phpBB'),
      'callback' => '_phpbb2drupal_migrate', 
      'type'=> MENU_CALLBACK
    );
  }
  return $items;
}

/****************************************************
 *
 * Implementation of hook_perm()
 *
****************************************************/
function phpbb2drupal() {
  return array ('migrate phpBB');
}

/****************************************************
 *
 * Implementation of hook_help()
 *
****************************************************/
function phpbb2drupal_help( $section='') {
  $output = '';
  switch ($section) {
    case "admin/modules#description":
      $output = t("Migrate your phpBB data into a Drupal forum.");
      break;
  }
  return $output;
}

/****************************************************
 *
 * Callback admin/phpbb2drupal
 *
****************************************************/
function _phpbb2drupal() {
  $output ='';
  
  $output .='<h3>Beware</h3>';
  $output .='<ul>';
  $output .='<li>phpbb and drupal should be in the same database.</li>';
  $output .='<li>the phpbb table prefix should be phpbb_</li>';
  $output .='<li>forum module should be enabled.</li>';
  $output .='<li></li>';
  $output .='<li></li>';
  $output .='</ul>';


  
  $output .='<h3>Migration</h3>';
  $output .='<ol><li>';
  $output .=l("Configure the migration", "admin/phpbb2drupal/configure");
  $output .='</li>';
  $output .='<li>';
  $output .=l("Execute the migration", "admin/phpbb2drupal/migrate");
  $output .='</li>';
  $output .='</ol>';
  $output .='';
  $output .='';
  $output .='';
  print theme ("page", $output);
  return 0;
}

/****************************************************
 *
 * Callback admin/phpbb2drupal/configure
 *
****************************************************/
function _phpbb2drupal_configure() {
  $output ='';
  $output .='Nothing to Configure in this version of phpbb2drupal.module.';
  $output .='';
  print theme ("page", $output);
  return 0;
}

/****************************************************
 *
 * Callback admin/phpbb2drupal/migrate
 *
****************************************************/
function _phpbb2drupal_migrate() {
  $output ='';
  $output .='Execute';
  $output .='';
#
# Written by Feodor (feodor [at] mundo.ru)
#
# Modified for drupal 4.5.2 and phpbb 2.0.11-2.0.13
# by Alexander Mikhailian <mikhailian@altern.org>
#
# This script makes an assumption that phpbb and drupal tables are kept in
# one and the same database. Phpbb tables are expected to have the prefix
# phpbb_ and drupal tables are expected to have the prefix 
#
# If phpBB forum use CP1251 (or another) encoding, the tables must be converted
# into UTF8. If version of MySQL less then 4.1 'iconv' command can be used for
# convertion of exported tables into UTF8.
#
# Example:
# iconv -fcp1251 -tutf8 < phpbb2.sql > phpbb2_utf-8.sql
#
# Here is a list of phpbb tables used by script for import into Drupal:
#
# <*> phpbb_categories
# <*> phpbb_forums
# <*> phpbb_posts
# <*> phpbb_posts_text
# <*> phpbb_users
# <*> phpbb_vote_desc
# <*> phpbb_vote_results
#
# You should probably edit the two variables below to match your result:

#
# The name of the forums taxanomy as it appears on the site
#

//SELECT @forum_title:='Forums';
  
$forum_title ="Forum";
  $output .="<br /> forum_title is : " . $forum_title ;
  
#
# Start importing users from this id. Do not forget that uid 1 is always 
# the Administrator in Drupal. Depending on whether you already created
# the Administrator user in Drupal or not, you may want to change this
# variable into 2.
#

//SELECT @first_phpbb_user_id:=2;
# uid 1 is always an administrator in Drupal

$first_phpbb_user_id="2";
  $output .="<br /> first_phpbb_user_id is : " . $first_phpbb_user_id ;


#
# Drupal variables for node counts
#
  $query = "SELECT MAX(forum_id) as phpbb_terms FROM phpbb_forums";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $phpbb_terms=$my_row->phpbb_terms;
  $output .="<br /> phpbbterms is : " . $phpbb_terms ;

  $query ="SELECT MAX(cat_id) as phpbb_cat FROM phpbb_categories";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $phpbb_cat=$my_row->phpbb_cat;
  $output .="<br /> phpbbcat is : " . $phpbb_cat ;

  $query = "SELECT id as term_data_tid FROM {sequences} WHERE name = '{term_data_tid}'";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $term_data_tid=$my_row->term_data_tid;
  if (!($term_data_tid > 0)) {
    $term_data_tid = 0;
  }
  $output .="<br /> term_data_tid is : " . $term_data_tid ;


  $query ="SELECT id as comments_cid FROM {sequences} WHERE name = '{comments_cid}'";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $comments_cid=$my_row->comments_cid;
  if (!($comments_cid > 0)) {
    $comments_cid = 0;
  }
  $output .="<br /> comments_cid is : " . $comments_cid ;

$vocabulary_vid = _forum_get_vid();
  $output .="<br /> vocabulary_vid is : " . $vocabulary_vid ;

  $query = "SELECT id FROM {sequences} WHERE name = '{node_nid}'";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $node_nid=$my_row->id;
  if (!($node_nid > 0)) {
    $node_nid = 0;
  }
  $output .="<br /> node_nid is : " . $node_nid ;

  
#
# Import user forms phpbb_users
#
$query = "INSERT INTO {users} (uid,name,pass,mail,mode,sort,threshold,theme,signature,created,changed,status,timezone,language,picture,init,data)
  SELECT  user_id,username,user_password,user_email,0,0,0,'',user_sig,user_regdate,user_lastvisit,1,0,'',user_avatar,user_email,'a:1:{s:5:\"roles\";a:1:{i:0;s:1:\"2\";}}'
  FROM phpbb_users
  WHERE user_id>=%d";
  $result = db_query($query, $first_phpbb_user_id);

  

#
# Set up the vocabulary 'Forum' as the forum vocabulary
#
$query = "DELETE FROM {variable} WHERE name = 'forum_nav_vocabulary'";
  $result = db_query($query);
$query = "INSERT INTO {variable} (name, value) VALUES ('forum_nav_vocabulary', CONCAT('s:1:\\\"',%d,'\\\";'))";
  $result = db_query($query, $vocabulary_vid);

#
# The default comment order in phpbb2 is 'oldest first'
#
$query = "DELETE FROM {variable} WHERE name = 'comment_default_order'";
  $result = db_query($query);
$query = "INSERT INTO {variable} (name, value) VALUES ('comment_default_order', 's:1:\\\"2\\\";')";
  $result = db_query($query);

#
# Import categories from phpbb_categories as terms
#
$query = "INSERT INTO {term_data} (tid,vid,name,weight)
  SELECT %d+cat_id,%d,cat_title,cat_order
  FROM phpbb_categories";
  $result = db_query($query, $term_data_tid,$vocabulary_vid);

#
# added by Augustin:
# Set phpbb_categories as drupal forum containers
#

$query = "SELECT %d+cat_id as container_id
  FROM phpbb_categories";
$result = db_query ($query, $term_data_tid);
$forum_containers = array();
$i = 0;
while ($my_row = db_fetch_object($result)) {
  $forum_containers[$i] = $my_row->container_id ;
  $i += 1;
}
variable_set('forum_containers', $forum_containers);

#
# Import terms from phpbb_forums
#  
$query = "INSERT INTO {term_data} (tid,vid,name,description,weight)
  SELECT %d+%d+forum_id,%d, forum_name,forum_desc,forum_order
  FROM phpbb_forums";
  $result = db_query($query, $term_data_tid, $phpbb_cat, $vocabulary_vid);

$query = "ALTER TABLE {term_data} ORDER BY tid";
  $result = db_query($query);

#
# Import forum hierarchy 
# Drupal allows topics to be created at this level while phpbb2 does not. If you want to disallow topics below
# categories, mark them as containers in the forum configuration dialog
#
$query = "INSERT INTO {term_hierarchy} (tid,parent)
  SELECT %d+cat_id,'0'
  FROM phpbb_categories";
  $result = db_query($query, $term_data_tid);

$query =" INSERT INTO {term_hierarchy} (tid,parent)
  SELECT %d+%d+forum_id, %d+cat_id
  FROM phpbb_forums";
  $result = db_query($query, $term_data_tid, $phpbb_cat, $term_data_tid);
  
$query = "ALTER TABLE {term_hierarchy} ORDER BY tid";
  $result = db_query($query);

#
# Create temporary tables for sorting topics and comments.
#

$query = "DROP TABLE IF EXISTS temp_posts";
  $result = db_query($query);
$query = "CREATE TABLE temp_posts (
   post_id mediumint(8) UNSIGNED NOT NULL auto_increment,
   topic_id mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
   forum_id smallint(5) UNSIGNED DEFAULT '0' NOT NULL,
   poster_id mediumint(8) DEFAULT '0' NOT NULL,
   post_time int(11) DEFAULT '0' NOT NULL,
   post_edit_time int(11),
   post_subject char( 255),
   post_text text,
   PRIMARY KEY (post_id),
   KEY forum_id (forum_id),
   KEY topic_id (topic_id),
   KEY poster_id (poster_id),
   KEY post_time (post_time)
)";
  $result = db_query($query);
$query   = "DROP TABLE IF EXISTS temp_node";
  $result = db_query($query);
$query = "CREATE TABLE temp_node (
   post_id mediumint(8) UNSIGNED NOT NULL auto_increment,
   topic_id mediumint(8) UNSIGNED DEFAULT '0' NOT NULL,
   PRIMARY KEY (post_id),
   KEY topic_id (topic_id)
)";
  $result = db_query($query);
   
#
# Copy into temporary table topics without comments
#
$query = "INSERT INTO temp_node (post_id,topic_id)
  SELECT MIN(post_id), topic_id
  FROM phpbb_posts
  GROUP BY topic_id";
  $result = db_query($query);
$query = "INSERT INTO temp_posts (post_id, topic_id,forum_id,poster_id, post_time,post_edit_time,post_subject,post_text)
  SELECT c.post_id, c.topic_id, a.forum_id, IF(a.poster_id='-1','0',a.poster_id), a.post_time, a.post_edit_time, 
  REPLACE(b.post_subject, CONCAT(':',b.bbcode_uid),''), REPLACE(b.post_text, CONCAT(':',b.bbcode_uid),'')
  FROM phpbb_posts AS a, phpbb_posts_text AS b, temp_node AS c
  WHERE c.post_id=a.post_id AND c.post_id=b.post_id";
  $result = db_query($query);

#
# Insert nid and tid from temp_posts into term_node
#
$query = "INSERT INTO {term_node} (nid,tid)
  SELECT %d+topic_id,%d+%d+forum_id
  FROM temp_posts";
  $result = db_query($query, $node_nid, $term_data_tid, $phpbb_cat);

$query = "ALTER TABLE {term_node} ORDER BY nid";
  $result = db_query($query);

#
# Insert forum topics from temp_posts into node
#
$query = "INSERT INTO {node} (nid,type,title,uid,created,comment,body,changed)
  SELECT %d+topic_id,'forum',post_subject,poster_id,post_time,'2',post_text,
  IF(post_edit_time<>'NULL',post_edit_time,post_time)
  FROM temp_posts";
  $result = db_query($query, $node_nid);

$query = "ALTER TABLE {node} ORDER BY nid";
  $result = db_query($query);

#
# Insert nid into forum 
#
$query = "DELETE FROM {forum}";
  $result = db_query($query);
$query = "INSERT INTO {forum} (nid,tid)
  SELECT %d+topic_id,%d+%d+forum_id
  FROM temp_posts";
  $result = db_query($query, $node_nid, $term_data_tid, $phpbb_cat);

#
# Insert comments into comments for topics from temp_posts
#
$query = "INSERT INTO {comments} (nid,uid,subject,comment,hostname,timestamp,users)
  SELECT %d+a.topic_id,
  CASE WHEN a.poster_id='-1' THEN '0' ELSE a.poster_id END,
  REPLACE(c.post_subject, CONCAT(':',c.bbcode_uid),''),
  REPLACE(c.post_text, CONCAT(':',c.bbcode_uid),''),
  CONCAT_WS('.',CONV(SUBSTRING(a.poster_ip,1,2),16,10),
    CONV(SUBSTRING(a.poster_ip,3,2),16,10),
    CONV(SUBSTRING(a.poster_ip,5,2),16,10),
    CONV(SUBSTRING(a.poster_ip,7,2),16,10)),
  a.post_time,'a:1:{i:0;i:0;}'
  FROM phpbb_posts AS a LEFT JOIN temp_posts AS b ON a.post_id=b.post_id,phpbb_posts_text AS c
  WHERE b.post_id IS NULL AND a.post_id=c.post_id";
  $result = db_query($query, $node_nid);
$query  = " ALTER TABLE {comments} ORDER BY cid";
  $result = db_query($query);

$query   = "UPDATE {comments},{node}
  SET {comments}.subject=IF({comments}.subject='',
    CONCAT('Re:',{node}.title),{comments}.subject)
  WHERE {comments}.nid={node}.nid";
  $result = db_query($query);
  
#
# Update thread in comments
#
$query = "DROP TABLE IF EXISTS comments_tmp";
  $result = db_query($query);
  
$query = "CREATE TABLE comments_tmp (
   cid int(10) NOT NULL default '0',
    nid int(10) NOT NULL default '0',
    thread int(10) NOT NULL  auto_increment,
    PRIMARY KEY  (nid,thread)
    )";
  $result = db_query($query);
    
$query = "INSERT INTO comments_tmp (cid,nid)
  SELECT cid,nid
  FROM {comments}
  WHERE cid>%d";
  $result = db_query($query, $comments_cid);

$query = "UPDATE {comments},comments_tmp 
  SET {comments}.thread=CONCAT(CONCAT(REPEAT(9,
    LEFT(comments_tmp.thread,LENGTH(comments_tmp.thread)-1)),
    RIGHT(comments_tmp.thread,1)),'/') 
  WHERE {comments}.cid=comments_tmp.cid";
  $result = db_query($query);

#
# Update history
#
#INSERT INTO history (uid, nid, timestamp)
#  SELECT a.uid, b.nid, a.timestamp
#  FROM users AS a, node AS b
#  WHERE a.uid>0 AND b.nid>@node_nid;

#
# update topic statistics 
#

$query = "INSERT INTO {node_comment_statistics} 
  (nid,last_comment_timestamp,last_comment_name,last_comment_uid,comment_count)
  SELECT %d+pt.topic_id, pp.post_time, ppt.post_subject, pp.poster_id, 
    pt.topic_replies
  FROM {node} dn, phpbb_topics pt, phpbb_posts pp, phpbb_posts_text ppt
  WHERE dn.nid = %d+pt.topic_id 
    AND pt.topic_last_post_id = pp.post_id 
    AND pp.post_id = ppt.post_id";
  $result = db_query($query, $node_nid, $node_nid);
#
# Delete all temp tables
#
$query = "DROP TABLE IF EXISTS temp_posts";
  $result = db_query($query);
$query = " DROP TABLE IF EXISTS comments_tmp";
  $result = db_query($query);
$query = "DROP TABLE IF EXISTS temp_node";
  $result = db_query($query);
#
# Update Drupal variables 
#
  $output .="<br /> ";
$query = "SELECT MAX(tid) as term_data_tid FROM {term_data}";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $term_data_tid=$my_row->term_data_tid;
  $output .="<br /> term_data_tid is : " . $term_data_tid ;

$query = "SELECT MAX(cid) as comment_cid FROM {comments}";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $comment_cid=$my_row->comment_cid;
  $output .="<br /> comment_cid is : " . $comment_cid ;

$query = "SELECT MAX(nid) as node_nid FROM {node} WHERE type = 'forum'";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $node_nid=$my_row->node_nid;
  $output .="<br /> node_nid is : " . $node_nid ;

$query = "SELECT MAX(uid) as users_uid FROM {users}";
  $result = db_query($query);
  $my_row= db_fetch_object($result);
  $users_uid=$my_row->users_uid;
  $output .="<br /> users_uid is : " . $users_uid ;


$query = "DELETE FROM {sequences} WHERE name='term_data_tid'";
  $result = db_query($query);
$query = "DELETE FROM {sequences} WHERE name='comments_cid'";
  $result = db_query($query);
$query = "DELETE FROM {sequences} WHERE name='node_nid'";
  $result = db_query($query);
$query = "DELETE FROM {sequences} WHERE name='users_uid'";
  $result = db_query($query);

$query = "INSERT INTO {sequences} (name,id) SELECT 'term_data_tid',%d";
  $result = db_query($query, $term_data_tid);
$query = "INSERT INTO {sequences} (name,id) SELECT 'comments_cid',%d";
  $result = db_query($query, $comments_cid);
$query = "INSERT INTO {sequences} (name,id) SELECT 'node_nid',%d";
  $result = db_query($query, $node_nid);
$query = "INSERT INTO {sequences} (name,id) SELECT 'users_uid',%d";
  $result = db_query($query, $users_uid);
#
# this is for porting personal messages to privatemsg drupal module
#
# phpbb_privmsgs.privmsgs_type has the following codes:
# written=1, seen in inbox = 5, read = 0, saved = 3
#
# attention, privatemsg limits the title to 64 chars, this is too 
# little
#
$query = "INSERT INTO {privatemsg} ( id, author, recipient,subject,message,timestamp,newmsg,hostname,folder,author_del,recipient_del )
  SELECT p.privmsgs_id, p.privmsgs_from_userid, p.privmsgs_to_userid,
    p.privmsgs_subject,pt.privmsgs_text,p.privmsgs_date,
    IF(p.privmsgs_type = 1 OR p.privmsgs_type = 5, 1, 0),
    p.privmsgs_ip,0,0,0
    FROM phpbb_privmsgs p
    LEFT JOIN (phpbb_privmsgs_text pt) ON p.privmsgs_id=pt.privmsgs_text_id";
  $result = db_query($query);
#
# converting polls
#

$query = "INSERT INTO {poll}(nid,runtime,polled,active)
  SELECT pvd.topic_id+41,0,'',0
  FROM phpbb_vote_desc pvd";
  $result = db_query($query);

$query = "INSERT INTO {poll_choices}(nid,chtext,chvotes,chorder)
  SELECT pvd.topic_id+41,
         pvr.vote_option_text,
         pvr.vote_result,
         vote_option_id # TODO chorder should be autoincremented from 1 every 
           # unique pvd.topic_id;
  FROM phpbb_vote_results pvr, phpbb_vote_desc pvd
  WHERE pvr.vote_id=pvd.vote_id";
  $result = db_query($query);

$query = "UPDATE {node} n, phpbb_vote_desc pvd SET type='poll'
  WHERE n.nid=pvd.topic_id+41;
  ";
  $result = db_query($query);
  
  db_query('DELETE FROM {cache}');
  drupal_set_message('cache cleared').
      
  

  print theme ("page", $output);
  return 0;
}


